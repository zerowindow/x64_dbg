<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Calculations</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Courier New;
	font-size: 11pt;
}
</style>

</head>

<body>
<P><STRONG>Calculations<BR></STRONG>The debugger allows usage of basic math 
operations, just type an expression in the 
command window and the result will be displayed in the console. Apart from 
calculations, it allows quick&nbsp;variable changes using a C-like syntax.</P>
<P><STRONG>Operators</STRONG><BR>  You can use the 
following operators in your expression. They are processed in the following order:</P>
<P><U>0:negative</U>      
      : Negative numbers can be prefixed by a 
'-' sign.</P>
<P><U>1:</U><U>brackets</U>: '(' and ')' Brackets are 
resolved first, there is no need for a terminating bracket, unless you want to 
use one.</P>
<P><U>2:not</U>: '~' The not operator can be used before a 
number of a variable, like in C.</P>
<P><U>3:muliplication/devision</U>: '*' = regular 
multiplication (signed/unsigned), '`' = get the higher part of the 
multiplication, '/' = regular devision (signed/unsigned, devide by zero=error) 
and '%' = get the modulo (remainder) of the devision.</P>
<P><U>4:addition/substraction</U>: '+' and '-'</P>
<P><U>5:shift</U>: '&lt;' = shift left (shl for unsigned, 
sal for signed), '&gt;' = shift right (shr for unsigned, sar for signed).</P>
<P><U>6:and</U>: '&amp;' Just the regular AND operation like 
in C.</P>
<P><U>7:xor</U>: '^' Just the regular XOR operation like in 
C.</P>
<P><U>8:or</U>: '|' Just the regular OR operation like in 
C.</P>
<P><STRONG>Quick-Assigning<BR></STRONG>Changing memory, a 
variable, register or&nbsp;flag can be easily done using a C-like 
syntax:</P>
<P><U>a?=b</U>: '?' can be any mathematical operation. 'a' 
can be any register, flag, variable or memory location. 'b' can be anything that is recognized as a mathmatical 
input.</P>
<P><U>a++/a--</U>: 'a' can be any register, flag, variable or memory 
location.</P></body>