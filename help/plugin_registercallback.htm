<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>_plugin_registercallback</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Courier New;
	font-size: 11pt;
}
</style>

</head>


<body>
<P><STRONG>_plugin_registercallback<BR></STRONG>This 
function registers an event callback for a plugin. Every plugin can have it's 
own callbacks for every event. It is not possible to have multiple callbacks on 
the same event.</P>
<P><STRONG>void 
_plugin_registercallback(</STRONG><BR><STRONG>int</STRONG> 
pluginHandle, //plugin handle<BR><STRONG>CBTYPE</STRONG> cbType, //event 
type<BR><STRONG>CBPLUGIN</STRONG> cbPlugin //callback 
function<BR><STRONG>)</STRONG>; 
             
              
  </P>
<P><STRONG>Parameters</STRONG> 
             
              
  </P>
<P><U>pluginHandle</U>: Handle of the calling plugin. 
             
              
  </P>
<P><U>cbType</U>: The event type. This can be any of the 
following values:<BR>&nbsp;&nbsp;&nbsp; 
CB_INITDEBUG, //callbackInfo: 
PLUG_CB_INITDEBUG*<BR>&nbsp;&nbsp;&nbsp; CB_STOPDEBUG, //callbackInfo: 
PLUG_CB_STOPDEBUG*<BR>&nbsp;&nbsp;&nbsp; CB_CREATEPROCESS, //callbackInfo: 
PLUG_CB_CREATEPROCESS*<BR>&nbsp;&nbsp;&nbsp; CB_EXITPROCESS, //callbackInfo: 
PLUG_CB_EXITPROCESS*<BR>&nbsp;&nbsp;&nbsp; CB_CREATETHREAD, //callbackInfo: 
PLUG_CB_CREATETHREAD*<BR>&nbsp;&nbsp;&nbsp; 
CB_EXITTHREAD, //callbackInfo: 
PLUG_CB_EXITTHREAD*<BR>&nbsp;&nbsp;&nbsp; CB_SYSTEMBREAKPOINT, //callbackInfo: 
PLUG_CB_SYSTEMBREAKPOINT*<BR>&nbsp;&nbsp;&nbsp; CB_LOADDLL, //callbackInfo: 
PLUG_CB_LOADDLL*<BR>&nbsp;&nbsp;&nbsp; 
CB_UNLOADDLL, //callbackInfo: 
PLUG_CB_UNLOADDLL*<BR>&nbsp;&nbsp;&nbsp; CB_OUTPUTDEBUGSTRING, //callbackInfo: 
PLUG_CB_OUTPUTDEBUGSTRING*<BR>&nbsp;&nbsp;&nbsp; 
CB_EXCEPTION, //callbackInfo: 
PLUG_CB_EXCEPTION*<BR>&nbsp;&nbsp;&nbsp; CB_BREAKPOINT, //callbackInfo: 
PLUG_CB_BREAKPOINT*<BR>&nbsp;&nbsp;&nbsp; CB_PAUSEDEBUG, //callbackInfo: 
PLUG_CB_PAUSEDEBUG*<BR>&nbsp;&nbsp;&nbsp; 
CB_RESUMEDEBUG, //callbackInfo: 
PLUG_CB_RESUMEDEBUG*<BR>&nbsp;&nbsp;&nbsp; CB_STEPPED, 
//callbackInfo: PLUG_CB_STEPPED* <BR>&nbsp;&nbsp;&nbsp; CB_ATTACH, 
//callbackInfo: PLUG_CB_ATTACHED*<BR>&nbsp;&nbsp;&nbsp; CB_DETACH, //callbackInfo: 
PLUG_CB_DETACHED*<BR>&nbsp;&nbsp;&nbsp; CB_DEBUGEVENT, //callbackInfo: 
PLUG_CB_DEBUGEVENT*<BR>&nbsp;&nbsp;&nbsp; CB_MENUENTRY, //callbackInfo: 
PLUG_CB_MENUENTRY*<BR>&nbsp;&nbsp;&nbsp; 
CB_WINEVENT //callbackInfo: PLUG_CB_WINEVENT* <BR>&nbsp;&nbsp;&nbsp; CB_WINEVENTGLOBAL //callbackInfo: 
PLUG_CB_WINEVENTGLOBAL* 
             
              
  </P>
<P><U>cbPlugin</U>: Callback with the following 
typdef:<BR>&nbsp;&nbsp;&nbsp; <STRONG>void 
CBPLUGIN(</STRONG><BR>&nbsp;&nbsp;&nbsp; <STRONG>CBTYPE</STRONG> bType //event 
type (useful when you use the same function for multiple 
events<BR>&nbsp;&nbsp;&nbsp; <STRONG>void* </STRONG>callbackInfo //pointer to a 
structure of information (see above)<BR>&nbsp;&nbsp;&nbsp; 
<STRONG>);</STRONG>  
 
             
              
  </P>
<P><STRONG>Return Values</STRONG><BR>This function does not 
return a value.  
 
             
              
  </P></BODY></HTML>